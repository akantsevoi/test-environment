syntax = "proto3";

package maroon.api.v1;

service GatewayService {
  rpc Perform(PerformRequest) returns (PerformResponse) {}
  
  rpc Performed(PerformedRequest) returns (PerformedResponse) {}
}

service NodeService {
  rpc GetRange(GetRangeRequest) returns (GetRangeResponse) {}
  rpc Perform(NodePerformRequest) returns (NodePerformResponse) {}
  rpc UpdateOffsets(UpdateOffsetsRequest) returns (UpdateOffsetsResponse) {}
  rpc EpochCommitted(EpochCommittedRequest) returns (EpochCommittedResponse) {}
}

message Range {
  int64 range_number = 1;
  int64 offset = 2;
}

message VectorState {
  repeated Range ranges = 1;
}

message PerformRequest {
  string function_name = 1;
  map<string, string> params = 2;
}

message PerformResponse {
  map<string, string> response = 1;
}

message PerformedRequest {
  string seq_id = 1;
  map<string, string> response = 2;
}

message PerformedResponse {}

message GetRangeRequest {
  int64 size = 1;
}

message GetRangeResponse {
  int64 range_number = 1;
}

message NodePerformRequest {
  string function_name = 1;
  map<string, string> params = 2;
  string seq_id = 3;
}

message NodePerformResponse {}

message UpdateOffsetsRequest {
  string node_name = 1;
  VectorState vector_state = 2;
}

message UpdateOffsetsResponse {}

message EpochCommittedRequest {
  VectorState vector_state = 1;
}

message EpochCommittedResponse {}
